{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","selectType","setSelectType","query","setQuery","value","onChange","e","target","placeholder","style","pointerEvents","Loader","TodoModal","modalOff","href","user","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodos","setTodo","modalOn","setModalOn","filteredTodos","setFilteredTodos","startUp","a","response","select","userId","useEffect","filter","element","prevTodos","toLocaleLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.577149b6.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoDetail } from '../../types/TodoDetails';\n\nexport type TodoListProps = {\n  todos: Todo[]\n  selectTodo: (todo:Todo) => void\n  selectedTodo: TodoDetail | null\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos, selectTodo, selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames(todo.id === selectedTodo?.id\n            ? ('has-background-info-light') : (''))}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              todo.completed ? 'has-text-success' : 'has-text-danger',\n            )}\n            >\n              {todo.title}\n\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames(todo.id === selectedTodo?.id\n                  ? ('far fa-eye-slash') : ('far fa-eye'))}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n\n    </tbody>\n  </table>\n);\n","export type FilterType = 'all' | 'active' | 'completed';\n\nexport type TodoFilterProps = {\n  selectType: FilterType\n  setSelectType: (filter: FilterType) => void\n  query: string\n  setQuery: (query: string)=> void\n};\n\nexport const TodoFilter = ({\n  selectType, setSelectType, query, setQuery,\n}: TodoFilterProps) => (\n\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={selectType}\n          onChange={(e) => setSelectType(e.target.value as FilterType)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { TodoDetail } from '../../types/TodoDetails';\n\nexport type TodoModalProps = {\n  todo: TodoDetail | null\n  modalOff: () => void\n};\n\nexport const TodoModal: React.FC<TodoModalProps> = ({ todo, modalOff }) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {todo === null ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={modalOff}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>) }\n\n              {' by '}\n\n              <a href={`mailto:${todo.user.email}`}>\n                {todo.user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoDetail } from './types/TodoDetails';\n\nexport type FilterType = 'all' | 'active' | 'completed';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n  const [todo, setTodo] = useState<TodoDetail | null>(null);\n  const [modalOn, setModalOn] = useState<boolean>(false);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[] | null>(null);\n  const [selectType, setSelectType] = useState<FilterType>('all');\n  const [query, setQuery] = useState<string>('');\n\n  const startUp = async () => {\n    const response = await getTodos();\n\n    setTodos(response);\n  };\n\n  const selectTodo = async (select: Todo) => {\n    setModalOn(true);\n    const user = await getUser(select.userId);\n\n    setTodo({ ...select, user });\n  };\n\n  const modalOff = () => {\n    setModalOn(false);\n    setTodo(null);\n  };\n\n  useEffect(() => {\n    startUp();\n  }, []);\n\n  useEffect(() => {\n    if (selectType === 'active') {\n      setFilteredTodos(() => (\n        todos?.filter((element) => element.completed === false) || []\n      ));\n    } else if (selectType === 'completed') {\n      setFilteredTodos(() => (\n        todos?.filter((element) => element.completed === true) || []\n      ));\n    } else {\n      setFilteredTodos(() => todos || []);\n    }\n\n    if (query) {\n      setFilteredTodos((prevTodos) => (\n        prevTodos?.filter((element) => element.title.toLocaleLowerCase().includes(query.toLocaleLowerCase())) || []\n      ));\n    }\n  }, [selectType, todos, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectType={selectType}\n                setSelectType={setSelectType}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos === null && (<Loader />)}\n\n              {filteredTodos && (<TodoList todos={filteredTodos} selectTodo={selectTodo} selectedTodo={todo} />)}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {modalOn && (<TodoModal todo={todo} modalOff={modalOff} />)}\n    </>\n  );\n};\n\n/*\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </>\n*/\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}